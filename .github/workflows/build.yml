jobs:
  build-and-analyze:
    name: Build and analyze
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/CarRental.sln') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Install SonarScanner for .NET
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
          SONAR_SCANNER_ARGS: >-
            /k:"lammeranssss_CarRent"
            /o:"lammeranssss"
            /d:sonar.host.url="https://sonarcloud.io"
            /d:sonar.scm.revision="${{ github.sha }}"
            /d:sonar.cs.opencover.reportsPaths='**/coverage.opencover.xml'
            /d:sonar.exclusions='**/obj/**,**/bin/**,**/Migrations/**'
            /d:sonar.tests='**/CarRental.IntegrationTests/**/*'
            /d:sonar.coverage.exclusions='**/CarRental.IntegrationTests/**,**/Program.cs,**/DI/**,**/Models/**'
            
        run: | 
          PR_ARGS=""
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            PR_ARGS="/d:sonar.pullrequest.key=${{ github.event.pull_request.number }} /d:sonar.pullrequest.branch=${{ github.event.pull_request.head.ref }} /d:sonar.pullrequest.base=${{ github.event.pull_request.base.ref }}"
          fi
          
          dotnet sonarscanner begin ${{ env.SONAR_SCANNER_ARGS }} /d:sonar.login="${{ env.SONAR_TOKEN }}" $PR_ARGS

          dotnet restore CarRental.sln

          dotnet build CarRental.sln --no-restore --configuration Release

          dotnet test CarRental.sln --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory ./coverage

          dotnet sonarscanner end /d:sonar.login="${{ env.SONAR_TOKEN }}"